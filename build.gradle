plugins {
	id 'net.minecraftforge.gradle' version '[6.0,6.2)'
	id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
	id 'maven-publish'
	id 'idea'
}

version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		url "https://maven.saps.dev/releases"
		content {
			includeGroup "dev.ftb.mods"
		}
	}
	maven { url "https://maven.shedaniel.me" }
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		forRepositories(fg.repository) // Only add this if you're using ForgeGradle, otherwise remove this line
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

minecraft {
	mappings channel: "official", version: "${minecraft_version}"
	copyIdeResources = true
	runs {
		// applies to all the run configs below
		configureEach {
			workingDirectory project.file('run')

			// Recommended logging data for a userdev environment
			// The markers can be added/remove as needed separated by commas.
			// "SCAN": For mods scan.
			// "REGISTRIES": For firing of registry events.
			// "REGISTRYDUMP": For getting the contents of all registries.
			property 'forge.logging.markers', 'REGISTRIES'

			// Recommended logging level for the console
			// You can set various levels here.
			// Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
			property 'forge.logging.console.level', 'debug'

			mods {
				"${mod_id}" {
					source sourceSets.main
				}
			}
		}

		client {
			// Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
			property 'forge.enabledGameTestNamespaces', mod_id
		}

		server {
			property 'forge.enabledGameTestNamespaces', mod_id
			args '--nogui'
		}

		// This run config launches GameTestServer and runs all registered gametests, then exits.
		// By default, the server will crash when no gametests are provided.
		// The gametest system is also enabled by default for other run configs under the /test command.
		gameTestServer {
			property 'forge.enabledGameTestNamespaces', mod_id
		}

		data {
			// example of overriding the workingDirectory set in configureEach above
			workingDirectory project.file('run-data')

			// Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
			args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
		}
	}
}
dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	annotationProcessor 'org.spongepowered:mixin:0.8.7:processor'

	implementation fg.deobf("maven.modrinth:impactor:$impactorVersion")
	implementation fg.deobf("dev.ftb.mods:ftb-chunks-forge:${ftbchunkVersion}")
	implementation fg.deobf("dev.ftb.mods:ftb-teams-forge:${ftbteamsVersion}")
	implementation fg.deobf("dev.ftb.mods:ftb-library-forge:${ftblibraryVersion}") {
		transitive = false
	}
	implementation fg.deobf("dev.architectury:architectury-forge:${architectury_version}")

}

sourceSets.main.resources { srcDir 'src/generated/resources' }

tasks.named('processResources', ProcessResources).configure {
	var replaceProperties = [
			minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
			forge_version: forge_version, forge_version_range: forge_version_range,
			loader_version_range: loader_version_range,
			mod_id: mod_id, mod_name: mod_name, mod_version: mod_version,
			mod_description: mod_description,
	]
	inputs.properties replaceProperties

	filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
		expand replaceProperties + [project: project]
	}
}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
//	manifest {
//		attributes([
//				'Specification-Title'     : mod_id,
//				'Specification-Vendor'    : mod_authors,
//				'Specification-Version'   : '1', // We are version 1 of ourselves
//				'Implementation-Title'    : project.name,
//				'Implementation-Version'  : project.jar.archiveVersion,
//				'Implementation-Vendor'   : mod_authors,
//				'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
//		])
//	}

	// This is the preferred method to reobfuscate your jar file
	finalizedBy 'reobfJar'
}